<div class="timeremaining">
  <p>Vote: {{voteData.vote.vote}} Voting in Progress! </p>
  <p id="current_time">{{voteData.vote.start_time}}</p>
<p id="demo"></p>

{{!-- <script src="moment.js"></script>
<script>
    moment().format();
</script> --}}
    {{!-- <button onclick="countdownTimeStart()">Start Timer</button> --}}
    <script>
      // Set the date we're counting down to

      function countdownTimeStart() {
        var currentDate = new Date().getTime();
        var countDownDate = currentDate + 20000; 
                //8.64e7;
        
//        new Date(current.getTime() + 86400000);
//        countDownDate.toLocaleDateString();
        

        // new Date("Sep 25, 2025 15:00:00").getTime(); <--** to set to a specific date comment out above two lines and set here.

        // Update the count down every 1 second

        var x = setInterval(function () {
          // Get todays date and time

          var now = new Date().getTime();
          // Find the distance between now an the count down date
          var distance = countDownDate - now;
          // Time calculations for days, hours, minutes and seconds

          var hours = Math.floor(
            (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
          );
          var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          var seconds = Math.floor((distance % (1000 * 60)) / 1000);

          // Output the result in an element with id="demo"
          document.getElementById("current_time").innerHTML = countDownDate.toLocaleDateString();

          document.getElementById("demo").innerHTML = 
            hours + "h " + minutes + "m " + seconds + "s ";

          // If the count down is over, write some text

          if (distance < 0) {
            clearInterval(x);

            document.getElementById("demo").innerHTML =
              "Voting for this set of proposals has ended. <a href='/results'>View Results</a>";
          }
        }, 1000);
      }
      countdownTimeStart();
    </script>
</div>
{{!-- <div class="user">
  <p>User: Michael</p>
</div> --}}
<div class="votes">
  {{!-- <p><span class="votescast">3</span> Votes cast<span class="votesremaining"> 2</span> Votes remaining</p> --}}


  <div class="col s-12 mainideas" height="400">
    <table class="table table-bordered">
      <thead>
        <tr>
          <th scope="col" class="col-1 sm-2 md-1">ID</th>
          <th scope="col" class="col-8 sm-5 md-8 ">Proposal</th>
          <th scope="col" class="col-1 sm-1 md-1">Votes</th>
          {{!-- <th scope="col"></th> --}}
          <th scope="col" class="col-2 sm-1 md-2"></th>
        </tr>
      </thead>
      <tbody>
        <!-- Loop over each object in the proposals array  -->
        {{#each proposalData.proposals as |proposal|}}
        <tr>
          <td id="{{proposalData.proposal.id}}">{{proposalData.proposal.id}}</td>
          <td id="p{{proposalData.proposal.id}}">{{proposalData.proposal.proposal}}</td>
          <td id="pv{{proposalData.proposal.id}}">{{proposalData.proposal.prop_votes}}</td>
          {{!-- <td>
            {{#times proposal.prop_votes}}

            {{/times}}
          </td> --}}
          <td><a class="buttonstyle voteButton" id="{{proposalData.proposal.id}}" data-id="{{proposalData.proposal.prop_votes}}"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
                fill="currentColor" class="bi bi-check-square-fill" viewBox="0 0 16 16">
                <path
                  d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm10.03 4.97a.75.75 0 0 1 .011 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.75.75 0 0 1 1.08-.022z" />
              </svg>Vote</a></td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
  </row>



  <script src="../js/vote.js"></script>

   

            

